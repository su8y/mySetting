" english auto change
let keep_input_source_in_normal=[ABC]
let keep_input_source_in_normal=ABC
set keep-english-in-normal-and-restore-in-insert

let mapleader = " "
set ignorecase
set smartcase
set visualbell
set number relativenumber
set ignorecase
set smartcase
set noerrorbells
set expandtab
set autoindent
set hlsearch
set incsearch
set ideajoin
set mouse=a
set idearefactormode=keep
set mousefocus
set scollfocus
set scrolloff=3
set highlightedyank

" 3 lines above/below cursor when scrolling
set NERDTree
set surround
set multiple-cursors
set easymotion
set quickscope
set sneak


" essential
imap jk <Esc>
imap ㅓㅏ <Esc>
nmap <S-Enter> O<Esc>
nmap <CR> o<Esc>
noremap H ^
noremap L $

" zen mode
noremap <leader>kz :action ToggleZenMode<CR>

" Quit visual mode
nnoremap <leader>y "+y
nnoremap <leader>p "+p
vnoremap <leader>y "+y
nnoremap Y y$
vnoremap v <Esc>
nnoremap <esc> :noh<cr>:w<cr><esc>
inoremap <Esc> <Esc>:w<CR>

" Tab operation
nnoremap <M-l> gt
nnoremap <M-h> gT
nnoremap <leader>l gt
nnoremap <leader>h gT
nmap <Tab> gt
nmap <S-Tab> gT

" mehotd up
nmap [[ <Action>(MethodUp)
nmap ]] <Action>(MethodDown)

" goto Error and Declaration"
nmap gi :action GotoImplementation<cr>
nmap gI :action QuickImplementations<cr>
nmap gl <Action>(QuickJavaDoc)
nmap gf <Action>(Forward)
" erorr
nmap gn :action GotoNextError<cr>
nmap gp :action GotoPreviousError<cr>
nmap gy :action ShowErrorDescription<cr>

"Editor indent"
nmap > <S-v>:action EditorIndentSelection<cr>
nmap < <S-v>:action EditorUnindentSelection<cr>
vmap > <Action>(EditorIndentSelection)
vmap < <Action>(EditorUnindentSelection)

" moving row"
nnoremap <M-k> :m -2<CR>
nnoremap <M-j> :m +1<CR>
inoremap <M-j> <Esc>:m +1<CR>gi
inoremap <M-k> <Esc>:m -2<CR>gi
vnoremap <M-j> :action MoveStatementDown<CR>
vnoremap <M-k> :action MoveStatementUp<CR>
nnoremap <M--> :action EditorDecreaseFontSize<CR>
nnoremap <M-=> :action EditorIncreaseFontSize<CR>


" Refactorings
map <leader>t <Action>(Refactorings.QuickListPopupAction)
" Closing tabs
nmap <leader>q :action CloseContent<cr>
nmap <leader>Q :action CloseAllEditorsButActive<cr>



" Navigation
nmap <leader>T :action GotoTest <CR>
nmap <leader>i :action GotoImplementation<cr>
nmap <leader>e :action GotoFile<cr>
nmap <leader>u :action FindUsages<cr>
nmap <leader>s :action GotoSymbol<cr>
nmap <leader>; :action FileStructurePopup<cr>

" smart key
nmap <leader>vf :action IntroduceField<cr>
nmap <leader>vp :action IntroduceParameter<cr>
nmap <leader>vv :action IntroduceVariable<cr>
nmap <leader>vm :action ExtractMethod<cr>

nmap <leader>b :action ToggleBookmark<cr>
nmap <C-Enter> :action Generate<cr>

" debug
nnoremap <leader>x :action ToggleLineBreakpoint<CR>
nmap <C-h> :action StepOut<CR>
nmap <C-j> :action StepOver<CR>
nmap <C-k> :action Resume<CR>
nmap <C-l> :action ForceStepInto<CR>
nmap <C-e> :NERDTree<CR>


noremap <leader>cc :action Coverage<CR>
noremap <leader>cn :action RunCoverage<CR>
" run
noremap <leader>dc :action DebugClass<CR>
nmap <C-;>l :action Run<cr>
noremap <C-;>m :action Stop<CR>
noremap <C-;>d :action Debug<CR>
nnoremap <C-;>n :action RunClass <CR>
nnoremap <C-;>c :action ChooseRunConfiguration <CR>

" open Finder
nmap <leader>/ :action FindInPath<cr>

" 뒤로가기
nnoremap <BS> <C-S-6>

" multi Cursor
map <C-N>  <A-N>
map <C-P>  <A-P>
map <C-X>  <A-X>
map g<C-N> <Action>(SelectAllOccurrences)
nnoremap <C-S-5> :action EditorMatchBrace<CR>

nnoremap <leader>p :action ParameterInfo<CR>
" edit ideavim config
" nnoremap <leader>vv :e ~/.ideavimrc<CR>
" nnoremap <leader>vr :source ~/.ideavimrc<CR a>
